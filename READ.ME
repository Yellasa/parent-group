初探springcloud  及 采坑经历
坑1、feignClient 添加requestMapping 启动报错
坑2、生产端添加{server.context-path}， feignClient无法找到路径


                springcloud + mybatis-plus + maven聚合
                        haerueka
            zuul  feignClients   hystrix（熔断）  ribbon(负载均衡)


erueka 自我保护模式 心跳默认90秒


hystrix（熔断） 2种方式
1、@HystrixCommand(fallbackMethod = "方法名")
2、接口实现（副逻辑）
3、 3种状态   闭合、打开、半开(允许部分请求尝试调用依赖服务)
4、commandProperties 配置，优先级排序 : 代码里面的配置>配置文件里面的配置
5、监控 http://localhost:8082/hystrix.stream


feign
1)对请求和相应，提供压缩支持
feign.compression.request.enable=true
feign.compression.response.enable=true

2)请求日志
logging:
  level:
    com.yt.stude.consumer.feign: debug

3) fallbackFactory 打印服务降级原因


zuul(网关、过滤器)
客户端一个功能，可能调用多服务端个接口
1、存在的问题：
1）增加客户端复杂程度
2）存在跨越问题，处理比较复杂
3）认证复杂，每个服务需要独立认证
4）难以重构，随着项目的迭代，可能重新划分微服务
5）某些服务可能有防火墙/浏览器不友好的协议，直接访问比较困难
这些也是为什么用网关的前提。
不仅开发得到了简化，网关带来其它的好处：
1）易于监控，监控数据可以推送到其它系统分析
2）易于认证
3）减少与微服务之间的交互次数


